#pragma rtGlobals=1		// Use modern global access method.// HP3478A proceedure// Written (mostly) by Nik 05-01-2018// TODO://    Figure out how to interpret binary responses in error and status strings//    Test async read function//////////////////////// set/get ////////////////////////function set3478Arange(instrID, range)	// Ranges: 0.03, 0.3, 3, 30, 300V 	Variable instrID, range	string cmd = ""	if(range == 0.03)		cmd = "R-2"	elseif(range == 0.3)		cmd = "R-1"	elseif(range == 3)		cmd = "R0"	elseif(range == 30)		cmd = "R1"	elseif(range == 300)		cmd = "R2"	else		print "[WARNING] Unknown range (HP3478A) -- set to 3V"		cmd = "R0"	endif		writeInstr(instrID, cmd, "\n")endfunction set3478Arate(instrID, linecycles)	// Linecycles: 0.1, 1, 10 (60Hz cycles)	Variable instrID, linecycles	string cmd = ""	if(linecycles == 0.1)		cmd = "N3"	elseif(linecycles == 1)		cmd = "N4"	elseif(linecycles == 10)		cmd = "N5"	else		print "[WARNING] Unknown rate (HP3478A) -- set to 1NPLC"		cmd = "R0"	endif		writeInstr(instrID, cmd, "\n")endfunction  setup3478Adcvolts(instrID, range, linecycles)	// setup dmm to take dc voltage readings	// Ranges: 0.03, 0.3, 3, 30, 300V 	// Linecycles: 0.1, 1, 10 (60Hz cycles)	// autozero off (set in this function) with 1NPLC gives 5.5 digits of resolution 	// according to the manual	// this is a pretty good default and makes the read time comparable to an srs830	Variable instrID, range, linecycles		writeInstr(instrID, "F1", "\n")   // set to measure DC voltage	set3478Arange(instrID, range)     // set range	set3478Arate(instrID, linecycles) // set NPLC	writeInstr(instrID, "Z0", "\n")   // autozero off	endfunction set3478Atext(instrID, text)	// set text = "" to reset display 	variable instrID	string text	string cmd = ""		if(strlen(text) == 0)   	cmd = "D1"	else		sprintf cmd, "D3%s", text	endif	writeInstr(instrID, cmd, "\n")endfunction /S get3478Ainput(instrID)	// check if reading from front or rear inputs	variable instrID	string response = ""		switch(str2num(queryInstr(instrID, "S", "\n", "\n")))		case 0:			return "rear"		case 1:			return "front"		default:			return "[WARNING] Unknown HP3478A input state"	endswitchend//////////////////////////////// sync/async readings ///////////////////////////////function read3478A(instrID)	// once everything is setup in the 	// proper mode, the device just keeps putting	// new points into the buffer	// viRead until \n gets the most recent buffered reading	Variable instrID	string response		response = readInstr(instrID, "\n")	return str2num(response)endthreadsafe function read3478A_ASYNC(datafolderID)	string datafolderID	string response		// get instrument ID from datafolder	DFREF dfr = ThreadGroupGetDFR(0,inf)	setdatafolder dfr	nvar instrID = $(":"+datafolderID+":instID")	killdatafolder dfr // We don't need the datafolder anymore!		response = readInstr(instrID, "\n")	return str2num(response)end///////////////////////////// Status functions ////////////////////////////function errors3478A(instrID)	variable instrID		// get error bytes	string errors	writeInstr(instrID, "B", "\n")	VISAReadBinary /Q /S=2 /T="\n" instrID, errors 	printf "%s\r", errors	endfunction /s GetDMMStatus(instrID)	variable instrID	string  buffer = ""		string gpib = num2istr(getAddressGPIB(instrID))	buffer = addJSONKeyVal(buffer, "gpib_address", strVal=gpib)		// get configuration	string config	writeInstr(instrID, "B", "\n")	VISAReadBinary /Q /S=5 /T="\n" instrID, config 	printf "%s\r", config	//	variable i=0//	do//		if(CmpStr(config[i], "+")==0 || CmpStr(config[i], "-")==0)//			break//		endif//		i+=1//	while(i<strlen(config))//	buffer = addJSONKeyVal(buffer, "units", strVal=TrimString(config[1,i-1]), addQuotes=1)//	buffer = addJSONKeyVal(buffer, "range", numVal=str2num(StringFromList(0, config[i,strlen(config)-2],",")), fmtNum="%.3f")//	buffer = addJSONKeyVal(buffer, "resolution", numVal=str2num(StringFromList(1, config[i,strlen(config)-2],",")), fmtNum="%.3e")//	//	return addJSONKeyVal("", "HP-DMM_"+gpib, strVal=buffer)end